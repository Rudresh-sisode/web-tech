how to make a single function of pagination which will be used in different api
Asked today
Modified today
Viewed 7 times
0

am written here logic pf pagination and now i wanted to be make single function of that logic

   let { page, limit } = req.query;
    try {
      if (!page) page = 1;
      if (!limit) limit = 5;
      const skip = (page - 1) * limit;
      const result = await countryModel.find().skip(skip).limit(limit);
      const totalPages = await countryModel.countDocuments();
      const previousPage = page - 1>0?true:false;
      const nextPage = Math.ceil((totalPages ) / limit)
  
      res.status(200);
      res.json({
        page: page,
        limit: limit,
        result: result,
        previousPage: previousPage,
        totalPages: nextPage,
      });
    } catch (error) {
      res.status(500).json({ message: error.message });
    }

Answer :

Sure, here's a possible implementation of the pagination function:

vbnet

async function paginate(model, page, limit) {
  if (!page) page = 1;
  if (!limit) limit = 5;
  const skip = (page - 1) * limit;
  const result = await model.find().skip(skip).limit(limit);
  const totalItems = await model.countDocuments();
  const totalPages = Math.ceil(totalItems / limit);
  const previousPage = page > 1;
  const nextPage = page < totalPages;
  return {
    page,
    limit,
    result,
    previousPage,
    nextPage,
    totalPages,
  };
}

You can then use this function in your endpoint handler like this:

scss

try {
  const { page, limit } = req.query;
  const result = await paginate(countryModel, page, limit);
  res.status(200).json(result);
} catch (error) {
  res.status(500).json({ message: error.message });
}

This implementation assumes that the model argument is a valid Mongoose model and that it has the find() and countDocuments() methods. You can modify the implementation to suit your needs.
